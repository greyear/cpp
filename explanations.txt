
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é	–ö–æ–≥–¥–∞ —Å–æ–∑–¥–∞—ë—Ç–µ –æ–±—ä–µ–∫—Ç –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
–ö–æ–ø–∏—Ä—É—é—â–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä	–ö–æ–≥–¥–∞ —Å–æ–∑–¥–∞—ë—Ç–µ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
–û–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º	–ö–æ–≥–¥–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç–µ –¥—Ä—É–≥–æ–π
–î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä	–ö–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è

Destructor: is called
    1) Automatically when the object goes out of scope
    2) When you call delete on a pointer to the object
Prevents resource leaks.
You return the book when you're done

Copy Constructor (ClassName(const ClassName& other)) is called
    1) when we write ClassName b = a;
If your class contains raw pointers, default copy will copy the pointer,
 not the data (shallow copy) ‚Üí both objects now share the same memory, which causes bugs on deletion.
You photocopy the book and give a new copy to someone

Copy Assignment Operator (ClassName& operator=(const ClassName& other)) is called
    1) when you write a = b; and both a and b already exist
You already have a book, but replace it with a photocopy of another


–¢–æ—á–Ω–æ—Å—Ç—å (accuracy) ‚Äî —ç—Ç–æ –Ω–∞—Å–∫–æ–ª—å–∫–æ –±–ª–∏–∑–∫–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫ –∏—Å—Ç–∏–Ω–Ω–æ–º—É.
–ü—Ä–µ—Ü–∏–∑–∏–æ–Ω–Ω–æ—Å—Ç—å (precision) ‚Äî —ç—Ç–æ –Ω–∞—Å–∫–æ–ª—å–∫–æ –ø–æ–¥—Ä–æ–±–Ω–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç–æ—á–Ω–æ –æ–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ.
Int values: good accuracy + limited precision (whole numbers are perfect, can't represent 2.5 or 1/3)
Float values: bad accuracy + good precision

Float:
32 –±–∏—Ç–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏:
-S (1 –±–∏—Ç) –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞–∫–∞
-E (8 –±–∏—Ç) –¥–ª—è —ç–∫—Å–ø–æ–Ω–µ–Ω—Ç—ã (window = interval between neighbor powers of 2)
-M (23 –±–∏—Ç–∞) –¥–ª—è –º–∞–Ω—Ç–∏—Å—Å—ã (offset within this window)
–í IEEE-754 –º–∞–Ω—Ç–∏—Å—Å–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ –¥—Ä–æ–±—å —Å –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ–º–æ–π "1" —Å–ª–µ–≤–∞ –æ—Ç –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Ç–æ—á–∫–∏.

—á–∏—Å–ª–æ = (–∑–Ω–∞–∫ ? -1 : 1) * 2^(—ç–∫—Å–ø–æ–Ω–µ–Ω—Ç–∞) * 1.(–±–∏—Ç—ã –º–∞–Ω—Ç–∏—Å—Å—ã)

–°–º–µ—â–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª—è–µ—Ç –æ–∫–Ω–æ –Ω–∞ $2^{23} = 8388608 —Å–µ–≥–º–µ–Ω—Ç–æ–≤. 
–° –ø–æ–º–æ—â—å—é –æ–∫–Ω–∞ –∏ —Å–º–µ—â–µ–Ω–∏—è –º–æ–∂–Ω–æ –∞–ø–ø—Ä–æ–∫—Å–∏–º–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ.

–î–∞–≤–∞–π—Ç–µ –≤–æ–∑—å–º—ë–º –µ—â—ë –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π —Ö–æ—Ä–æ—à–æ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –≤—Å–µ–º –Ω–∞–º –∑–Ω–∞—á–µ–Ω–∏—è: 3,14.

–ß–∏—Å–ª–æ 3,14 –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ $\rightarrow S=0$.
–ß–∏—Å–ª–æ 3,14 –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–µ–∂–¥—É —Å—Ç–µ–ø–µ–Ω—è–º–∏ –¥–≤–æ–π–∫–∏ 2 –∏ 4, —Ç–æ –µ—Å—Ç—å –æ–∫–Ω–æ —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å $2^1$ $\rightarrow E=128$ (—Å–º. —Ñ–æ—Ä–º—É–ª—É, –≥–¥–µ –æ–∫–Ω–æ ‚Äî —ç—Ç–æ $2^{(E-127)}$).
–ù–∞–∫–æ–Ω–µ—Ü, –µ—Å—Ç—å $2^{23}$ —Å–º–µ—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ 3,14 –≤–Ω—É—Ç—Ä–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ [2-4]. –û–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ $\frac{3,14 -2 }{4 - 2} = 0,57$ –≤–Ω—É—Ç—Ä–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞, —á—Ç–æ –¥–∞—ë—Ç –Ω–∞–º —Å–º–µ—â–µ–Ω–∏–µ $M = 2^{23}*0,57 = 4781507$

–í –¥–≤–æ–∏—á–Ω–æ–º –≤–∏–¥–µ —ç—Ç–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–µ–µ:

S = 0 = 0b
E = 128 = 10000000
M = 4781507 = 10010001111010111000011

–î–≤–æ–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π —á–∏—Å–ª–∞ 3,14.
–¢–æ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ 3,14 –∞–ø–ø—Ä–æ–∫—Å–∏–º–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ 3,1400001049041748046875.

#define EPSILON 1.0e-7
#define flt_equals(a, b) (fabs((a)-(b)) < EPSILON)

–ü—Ä–æ–±–ª–µ–º–∞ "—Ä–æ–º–±–æ–≤–∏–¥–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è" (Diamond Problem)
–ò –∏ ScavTrap, –∏ FragTrap –Ω–∞—Å–ª–µ–¥—É—é—Ç –æ—Ç ClapTrap.
–ê –ø–æ—Ç–æ–º DiamondTrap –Ω–∞—Å–ª–µ–¥—É–µ—Ç –æ–±–∞ –∫–ª–∞—Å—Å–∞. –ü–æ–ª—É—á–∞–µ—Ç—Å—è:
üí• –í –∫–ª–∞—Å—Å–µ DiamondTrap –±—É–¥–µ—Ç –¥–≤–µ –∫–æ–ø–∏–∏ ClapTrap ‚Üí –æ–¥–Ω–∞ –æ—Ç ScavTrap, –≤—Ç–æ—Ä–∞—è –æ—Ç FragTrap.
–≠—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏:
DiamondTrap dt("Bot");
dt._hitPoints; // ‚ùå –æ—à–∏–±–∫–∞: –∏–∑ –∫–∞–∫–æ–≥–æ ClapTrap –±—Ä–∞—Ç—å ‚Äî –∏–∑ ScavTrap –∏–ª–∏ FragTrap?

–ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞, C++ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
class ScavTrap : virtual public ClapTrap { ... };
class FragTrap : virtual public ClapTrap { ... };
–≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É:
¬´–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ —É–Ω–∞—Å–ª–µ–¥—É–µ—Ç –æ–±–∞ (–∏ ScavTrap, –∏ FragTrap), —Ç–æ –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å ClapTrap –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ–¥–∏–Ω —Ä–∞–∑, –∏ –æ–Ω –±—É–¥–µ—Ç –æ–±—â–∏–π¬ª.
–¢–∞–∫ –∫–∞–∫ ClapTrap –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –µ–≥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ª–æ–∂–∏—Ç—Å—è –Ω–∞ —Å–∞–º–æ–≥–æ –Ω–∏–∂–Ω–µ–≥–æ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞ ‚Äî —Ç–æ –µ—Å—Ç—å –Ω–∞ DiamondTrap.

Virtual –≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É:
‚ö†Ô∏è "–Ø –Ω–µ —Ö–æ—á—É —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ—é –∫–æ–ø–∏—é ClapTrap, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏. –ü—É—Å—Ç—å —Å–æ–∑–¥–∞—ë—Ç —Ç–æ—Ç, –∫—Ç–æ –±—É–¥–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–º –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏."

–ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º –ø–æ–¥—Ç–∏–ø–æ–≤ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É–∫–∞–∑–∞—Ç–µ–ª—å (–∏–ª–∏ —Å—Å—ã–ª–∫–∞) –Ω–∞ –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –æ–±—ä–µ–∫—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
Animal* animal = new Dog();
animal->speak();  // –í—ã–≤–µ–¥–µ—Ç: Dog barks
Animal* ‚Äî —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –±–∞–∑–æ–≤—ã–π —Ç–∏–ø, –Ω–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (Dog)

–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –Ω–∞–ø—Ä—è–º—É—é, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —á–∏—Å—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.
–¢–∞–∫–æ–π –∫–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∞ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–∏—Å—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –Ω–µ –∏–º–µ—é—â–∏–π –¥–∞–Ω–Ω—ã—Ö/—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π.
–í C++ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ interface –Ω–µ—Ç, –Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Ä–µ–∞–ª–∏–∑—É—é—Ç—Å—è —á–µ—Ä–µ–∑ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã.
–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —á–∞—Å—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å I, –Ω–∞–ø—Ä–∏–º–µ—Ä IShape, IDrawable

virtual void attack(const std::string& target) = 0;
–≠—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —á–∏—Å—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
"= 0" –≥–æ–≤–æ—Ä–∏—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É: –≤ —ç—Ç–æ–º –∫–ª–∞—Å—Å–µ –Ω–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, –µ—ë –¥–æ–ª–∂–Ω—ã –¥–∞—Ç—å –ø–æ—Ç–æ–º–∫–∏

ScavTrap bob("Bob");
FragTrap joe("Joe");
ClapTrap* ptr = &bob;
ptr->attack("target");  // –≤—ã–∑–æ–≤–µ—Ç—Å—è ScavTrap::attack()
ptr = &joe;
ptr->attack("target");  // –≤—ã–∑–æ–≤–µ—Ç—Å—è FragTrap::attack()


